Á
UC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\City\CityCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
City "
;" #
public 
class 
CityCommand 
{ 
public 

int 
Code 
{ 
get 
; 
set 
; 
}  !
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
=% &
string' -
.- .
Empty. 3
;3 4
public 

Guid 
StateId 
{ 
get 
; 
set "
;" #
}$ %
} à
[C:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\City\CreateCityCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
City "
;" #
public 
class 
CreateCityCommand 
:  
CityCommand! ,
,, -
IRequest. 6
<6 7
Result7 =
<= >
Guid> B
>B C
>C D
{ 
} ƒ
[C:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\City\RemoveCityCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
City "
;" #
public 
class 
RemoveCityCommand 
:  
IRequest! )
<) *
Result* 0
>0 1
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
}		 Ï
[C:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\City\UpdateCityCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
City "
;" #
public 
class 
UpdateCityCommand 
:  
CityCommand! ,
,, -
IRequest. 6
<6 7
Result7 =
>= >
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
}		 ç
]C:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\State\CreateStateCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
State #
;# $
public 
class 
CreateStateCommand 
:  !
StateCommand" .
,. /
IRequest0 8
<8 9
Result9 ?
<? @
Guid@ D
>D E
>E F
{ 
}		 »
]C:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\State\RemoveStateCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
State #
;# $
public 
class 
RemoveStateCommand 
:  !
IRequest" *
<* +
Result+ 1
>1 2
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
}		 ◊
WC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\State\StateCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
State #
;# $
public 
abstract 
class 
StateCommand "
{ 
public 

int 
Code 
{ 
get 
; 
set 
; 
}  !
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
=% &
string' -
.- .
Empty. 3
;3 4
public 

string 
Acronym 
{ 
get 
;  
set! $
;$ %
}& '
=( )
string* 0
.0 1
Empty1 6
;6 7
} Ò
]C:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\State\UpdateStateCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
State #
;# $
public 
class 
UpdateStateCommand 
:  !
StateCommand" .
,. /
IRequest0 8
<8 9
Result9 ?
>? @
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
}		 ç
YC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\User\AuthUserCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
User "
;" #
public 
class 
AuthUserCommand 
: 
UserCommand *
,* +
IRequest, 4
<4 5
Result5 ;
<; <
TokenResponse< I
>I J
>J K
{ 
}		 ç
[C:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\User\CreateUserCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
User "
;" #
public 
class 
CreateUserCommand 
:  
UserCommand! ,
,, -
IRequest. 6
<6 7
Result7 =
<= >
Guid> B
>B C
>C D
{ 
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
=% &
string' -
.- .
Empty. 3
;3 4
public

 

bool

 
IsAdmin

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
} ™
UC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Command\User\UserCommand.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Command 
. 
User "
;" #
public 
class 
UserCommand 
{ 
public 

string 
Email 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
public 

string 
Password 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
} ò
XC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Constants\CacheKeyConstants.cs
	namespace 	
Ibge
 
. 
Domain 
. 
	Constants 
;  
public 
static 
class 
CacheKeyConstants %
{ 
public 

static 
readonly 
string !

StateCache" ,
=- .
nameof/ 5
(5 6
State6 ;
); <
;< =
} Ò
MC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\BaseFromFile.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
; 
public 
abstract 
class 
BaseFromFile "
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
public 

int 
CountTry 
{ 
get 
; 
private &
set' *
;* +
}, -
	protected		 
BaseFromFile		 
(		 
Guid		 
id		  "
)		" #
{

 
Id 

= 
id 
; 
} 
public 

void 
AddTry 
( 
) 
{ 
CountTry 
++ 
; 
} 
} ™
PC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\BaseResponseDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
; 
public 
abstract 
class 
BaseResponseDto %
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
public 

DateTimeOffset 
	CreatedAt #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 

DateTimeOffset		 
?		 
	UpdatedAt		 $
{		% &
get		' *
;		* +
set		, /
;		/ 0
}		1 2
}

 î
UC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\City\CityFromFileDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
. 
City 
; 
public 
class 
CityFromFileDto 
: 
BaseFromFile +
{ 
public 

int 
Code 
{ 
get 
; 
set 
; 
}  !
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
public 

int 
	StateCode 
{ 
get 
; 
set  #
;# $
}% &
public		 

CityFromFileDto		 
(		 
Guid		 
id		  "
,		" #
int		$ '
code		( ,
,		, -
string		. 4
name		5 9
,		9 :
int		; >
	stateCode		? H
)		H I
:		J K
base		L P
(		P Q
id		Q S
)		S T
{

 
Code 
= 
code 
; 
Name 
= 
name 
; 
	StateCode 
= 
	stateCode 
; 
} 
public 

override 
string 
ToString #
(# $
)$ %
{ 
return 
$" 
{ 
Code 
} 
$str 
{ 
Name 
}  
$str  #
{# $
	StateCode$ -
}- .
". /
;/ 0
} 
} ¶
XC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\City\CityQueryParamsDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
. 
City 
; 
public 
class 
CityQueryParamsDto 
:  !
PaginateRequest" 1
{ 
public 

Guid 
? 
Id 
{ 
get 
; 
set 
; 
}  !
public 

int 
? 
Code 
{ 
get 
; 
set 
;  
}! "
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
public 

Guid 
? 
StateId 
{ 
get 
; 
set  #
;# $
}% &
public

 

CityQueryParamsDto

 
(

 
Guid

 "
?

" #
id

$ &
,

& '
int

( +
?

+ ,
code

- 1
,

1 2
string

3 9
?

9 :
name

; ?
,

? @
Guid

A E
?

E F
stateId

G N
,

N O
int

P S
page

T X
=

Y Z
$num

[ \
,

\ ]
int

^ a
size

b f
=

g h
$num

i k
)

k l
:

m n
base

o s
(

s t
page

t x
,

x y
size

z ~
)

~ 
{ 
Id 

= 
id 
; 
Code 
= 
code 
; 
Name 
= 
name 
; 
StateId 
= 
stateId 
; 
Page 
= 
page 
; 
Size 
= 
size 
; 
} 
} ì
UC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\City\CityResponseDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
. 
City 
; 
public 
class 
CityResponseDto 
: 
BaseResponseDto .
{ 
public 

int 
Code 
{ 
get 
; 
set 
; 
}  !
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
=% &
string' -
.- .
Empty. 3
;3 4
public 

Guid 
StateId 
{ 
get 
; 
set "
;" #
}$ %
} ®
QC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\PagedResponseDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
; 
public 
class 
PagedResponseDto 
< 
T 
>  
{ 
public 

IEnumerable 
< 
T 
> 
Data 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 

int 
CurrentPage 
{ 
get  
;  !
set" %
;% &
}' (
public 

int 

TotalPages 
{ 
get 
;  
set! $
;$ %
}& '
public 

int 
PageSize 
{ 
get 
; 
set "
;" #
}$ %
public		 

int		 

TotalCount		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public 

PagedResponseDto 
( 
IEnumerable '
<' (
T( )
>) *
data+ /
,/ 0
int1 4
currentPage5 @
,@ A
intB E

totalPagesF P
,P Q
intR U
pageSizeV ^
,^ _
int` c

totalCountd n
)n o
{ 
Data 
= 
data 
; 
CurrentPage 
= 
currentPage !
;! "

TotalPages 
= 

totalPages 
;  
PageSize 
= 
pageSize 
; 

TotalCount 
= 

totalCount 
;  
} 
} ¡
PC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\PaginateRequest.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
; 
public 
class 
PaginateRequest 
{ 
const 	
int
 
_minPage 
= 
$num 
; 
const 	
int
 
_maxSize 
= 
$num 
; 
public 

int 
Page 
{ 
get 
; 
set 
; 
}  !
public

 

int

 
Size

 
{

 
get

 
;

 
set

 
;

 
}

  !
public 

PaginateRequest 
( 
int 
page #
,# $
int% (
size) -
)- .
{ 
Page 
= 
page 
; 
Size 
= 
size 
; 
if 

( 
Page 
< 
_minPage 
) 
Page 
= 
_minPage 
; 
if 

( 
Size 
> 
_maxSize 
) 
Size 
= 
_maxSize 
; 
} 
} Ï
WC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\State\StateFromFileDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
. 
State 
;  
public 
class 
StateFromFileDto 
: 
BaseFromFile  ,
{ 
public 

int 
Code 
{ 
get 
; 
set 
; 
}  !
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
public 

string 
Acronym 
{ 
get 
;  
set! $
;$ %
}& '
public		 

StateFromFileDto		 
(		 
Guid		  
id		! #
,		# $
int		% (
code		) -
,		- .
string		/ 5
name		6 :
,		: ;
string		< B
acronym		C J
)		J K
:		L M
base		N R
(		R S
id		S U
)		U V
{

 
Code 
= 
code 
; 
Name 
= 
name 
; 
Acronym 
= 
acronym 
; 
} 
public 

override 
string 
ToString #
(# $
)$ %
{ 
var 
result 
= 
$" 
{ 
Code 
} 
$str  
{  !
Acronym! (
}( )
$str) ,
{, -
Name- 1
}1 2
"2 3
;3 4
return 
result 
; 
} 
} ≤
ZC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\State\StateQueryParamsDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
. 
State 
;  
public 
class 
StateQueryParamsDto  
:! "
PaginateRequest# 2
{ 
public 

Guid 
? 
Id 
{ 
get 
; 
set 
; 
}  !
public 

int 
? 
Code 
{ 
get 
; 
set 
;  
}! "
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
public 

string 
? 
Acronym 
{ 
get  
;  !
set" %
;% &
}' (
public 

StateQueryParamsDto 
( 
Guid #
?# $
id% '
,' (
int) ,
?, -
code. 2
,2 3
string4 :
?: ;
name< @
,@ A
stringB H
?H I
acronymJ Q
,Q R
intS V
pageW [
=\ ]
$num^ _
,_ `
inta d
sizee i
=j k
$numl n
)n o
:o p
baseq u
(u v
pagev z
,z {
size	| Ä
)
Ä Å
{ 
Id 

= 
id 
; 
Code 
= 
code 
; 
Name 
= 
name 
; 
Acronym 
= 
acronym 
; 
Page 
= 
page 
; 
Size 
= 
size 
; 
} 
} Ì
WC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\State\StateResponseDto.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
. 
State 
;  
public 
class 
StateResponseDto 
: 
BaseResponseDto  /
{ 
public 

int 
Code 
{ 
get 
; 
set 
; 
}  !
public 

string 
Name 
{ 
get 
; 
set !
;! "
}# $
=% &
string' -
.- .
Empty. 3
;3 4
public 

string 
Acronym 
{ 
get 
;  
set! $
;$ %
}& '
=( )
string* 0
.0 1
Empty1 6
;6 7
} ê
NC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\DTO\TokenResponse.cs
	namespace 	
Ibge
 
. 
Domain 
. 
DTO 
; 
public 
class 
TokenResponse 
{ 
public 

string 
Token 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
} π
NC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Entity\BaseEntity.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Entity 
; 
public 
abstract 
class 

BaseEntity  
{ 
public 

Guid 
Id 
{ 
get 
; 
private !
set" %
;% &
}' (
public 

DateTimeOffset 
	CreatedAt #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public		 

DateTimeOffset		 
?		 
	UpdatedAt		 $
{		% &
get		' *
;		* +
private		, 3
set		4 7
;		7 8
}		9 :
	protected 

BaseEntity 
( 
) 
{ 
Id 

= 
Guid 
. 
NewGuid 
( 
) 
; 
} 
	protected 

BaseEntity 
( 
Guid 
id  
)  !
{ 
Id 

= 
id 
; 
} 
public 

void 
SetCreatedAt 
( 
DateTimeOffset +
	createdAt, 5
)5 6
=>7 9
this 
. 
	CreatedAt 
= 
	createdAt "
;" #
public 

void 
SetUpdatedAt 
( 
DateTimeOffset +
	updatedAt, 5
)5 6
=>7 9
this 
. 
	UpdatedAt 
= 
	updatedAt "
;" #
} ì
HC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Entity\City.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Entity 
; 
public 
class 
City 
: 

BaseEntity 
{ 
public 

int 
Code 
{ 
get 
; 
private "
set# &
;& '
}( )
public 

string 
Name 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 

Guid 
StateId 
{ 
get 
; 
private &
set' *
;* +
}, -
public 

State 
? 
State 
{ 
get 
; 
private &
set' *
;* +
}, -
public

 

City

 
(

 
int

 
code

 
,

 
string

  
name

! %
,

% &
State

' ,
state

- 2
)

2 3
{ 
Code 
= 
code 
; 
Name 
= 
name 
; 
StateId 
= 
state 
. 
Id 
; 
State 
= 
state 
; 
} 
public 

City 
( 
int 
code 
, 
string  
name! %
,% &
Guid' +
stateId, 3
)3 4
{ 
Code 
= 
code 
; 
Name 
= 
name 
; 
StateId 
= 
stateId 
; 
} 
public 

City 
( 
Guid 
id 
, 
int 
code !
,! "
string# )
name* .
,. /
Guid0 4
stateId5 <
)< =
:> ?
base@ D
(D E
idE G
)G H
{ 
Code 
= 
code 
; 
Name 
= 
name 
; 
StateId 
= 
stateId 
; 
} 
} ò
MC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Entity\PagedList.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Entity 
; 
public 
class 
	PagedList 
< 
T 
> 
: 
List  
<  !
T! "
>" #
where$ )
T* +
:, -

BaseEntity. 8
{ 
public 

int 
CurrentPage 
{ 
get  
;  !
set" %
;% &
}' (
public 

int 

TotalPages 
{ 
get 
;  
set! $
;$ %
}& '
public 

int 
PageSize 
{ 
get 
; 
set "
;" #
}$ %
public 

int 

TotalCount 
{ 
get 
;  
set! $
;$ %
}& '
public

 

	PagedList

 
(

 
IEnumerable

  
<

  !
T

! "
>

" #
currentPage

$ /
,

/ 0
int

1 4
count

5 :
,

: ;
int

< ?

pageNumber

@ J
,

J K
int

L O
pageSize

P X
)

X Y
{ 
CurrentPage 
= 

pageNumber  
;  !

TotalPages 
= 
( 
int 
) 
Math 
. 
Ceiling &
(& '
count' ,
/- .
(/ 0
double0 6
)6 7
pageSize7 ?
)? @
;@ A
PageSize 
= 
pageSize 
; 

TotalCount 
= 
count 
; 
AddRange 
( 
currentPage 
) 
; 
} 
} ∆
IC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Entity\State.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Entity 
; 
public 
class 
State 
: 

BaseEntity 
{ 
public 

int 
Code 
{ 
get 
; 
private "
set# &
;& '
}( )
public 

string 
Name 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 

string 
Acronym 
{ 
get 
;  
private! (
set) ,
;, -
}. /
public 

ICollection 
< 
City 
> 
Cities #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
=: ;
new< ?
List@ D
<D E
CityE I
>I J
(J K
)K L
;L M
public

 

State

 
(

 
int

 
code

 
,

 
string

 !
name

" &
,

& '
string

( .
acronym

/ 6
)

6 7
{ 
Code 
= 
code 
; 
Name 
= 
name 
; 
Acronym 
= 
acronym 
; 
} 
public 

State 
( 
Guid 
id 
, 
int 
code "
," #
string$ *
name+ /
,/ 0
string1 7
acronym8 ?
)? @
:A B
baseC G
(G H
idH J
)J K
{ 
Code 
= 
code 
; 
Name 
= 
name 
; 
Acronym 
= 
acronym 
; 
} 
public 

void 
AddCity 
( 
City 
city !
)! "
{ 
Cities 
. 
Add 
( 
city 
) 
; 
} 
} ¡
HC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Entity\User.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Entity 
; 
public 
class 
User 
: 

BaseEntity 
{ 
public 

string 
Name 
{ 
get 
; 
private %
set& )
;) *
}+ ,
public 

string 
Email 
{ 
get 
; 
private &
set' *
;* +
}, -
public 

string 
Password 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 

bool 
IsAdmin 
{ 
get 
; 
private &
set' *
;* +
}, -
public

 

User

 
(

 
string

 
name

 
,

 
string

 #
email

$ )
,

) *
string

+ 1
password

2 :
,

: ;
bool

< @
isAdmin

A H
)

H I
{ 
this 
. 
Name 
= 
name 
; 
this 
. 
Email 
= 
email 
; 
this 
. 
Password 
= 
password  
;  !
this 
. 
IsAdmin 
= 
isAdmin 
; 
} 
} ë
WC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Repository\ICityRepository.cs
	namespace 	
Ibge
 
. 
Domain 
. 

Repository  
;  !
public 
	interface 
ICityRepository  
:! "
IRepository# .
<. /
City/ 3
>3 4
{ 
} Ö
SC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Repository\IRepository.cs
	namespace 	
Ibge
 
. 
Domain 
. 

Repository  
;  !
public 
	interface 
IRepository 
< 
T 
> 
where  %
T& '
:( )

BaseEntity* 4
{ 
Task 
< 	
T	 

?
 
> 
GetById 
( 
Guid 
id 
, 
CancellationToken /
cancellationToken0 A
=B C
defaultD K
)K L
;L M
Task 
Add	 
( 
T 
entity 
, 
CancellationToken (
cancellationToken) :
=; <
default= D
)D E
;E F
Task		 
Update			 
(		 
T		 
entity		 
)		 
;		 
Task

 
Remove

	 
(

 
T

 
entity

 
,

 
CancellationToken

 +
cancellationToken

, =
=

> ?
default

@ G
)

G H
;

H I
Task 
< 	

IQueryable	 
< 
T 
> 
> 
GetAll 
( 

Expression )
<) *
Func* .
<. /
T/ 0
,0 1
bool2 6
>6 7
>7 8
?8 9

expression: D
=E F
defaultG N
,N O
intP S
pageT X
=Y Z
default[ b
,b c
intd g
sizeh l
=m n
defaulto v
,v w
CancellationToken	x â
cancellationToken
ä õ
=
ú ù
default
û •
)
• ¶
;
¶ ß
Task 
< 	
	PagedList	 
< 
T 
> 
> 
Get 
( 

Expression %
<% &
Func& *
<* +
T+ ,
,, -
bool. 2
>2 3
>3 4
?4 5

expression6 @
=A B
defaultC J
,J K
intL O
pageP T
=U V
defaultW ^
,^ _
int` c
sized h
=i j
defaultk r
,r s
CancellationToken	t Ö
cancellationToken
Ü ó
=
ò ô
default
ö °
)
° ¢
;
¢ £
} 
XC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Repository\IStateRepository.cs
	namespace 	
Ibge
 
. 
Domain 
. 

Repository  
;  !
public 
	interface 
IStateRepository !
:" #
IRepository$ /
</ 0
State0 5
>5 6
{ 
Task 
< 	
Guid	 
? 
> 
GetIdByCode 
( 
int 
code  $
,$ %
CancellationToken& 7
cancellationToken8 I
=J K
defaultL S
)S T
;T U
Task 
< 	
State	 
? 
> 
GetByIdWithCities "
(" #
Guid# '
id( *
,* +
CancellationToken, =
cancellationToken> O
=P Q
defaultR Y
)Y Z
;Z [
}		 ë
WC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Repository\IUserRepository.cs
	namespace 	
Ibge
 
. 
Domain 
. 

Repository  
;  !
public 
	interface 
IUserRepository  
:! "
IRepository# .
<. /
User/ 3
>3 4
{ 
} æ
SC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Services\ICityServices.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Services 
; 
public 
	interface 
ICityServices 
{		 
Task

 
<

 	
Result

	 
<

 
Guid

 
>

 
>

 
Create

 
(

 
CreateCityCommand

 /
request

0 7
,

7 8
CancellationToken

9 J
cancellationToken

K \
)

\ ]
;

] ^
Task 
< 	
Result	 
> 
Update 
( 
UpdateCityCommand )
request* 1
,1 2
CancellationToken3 D
cancellationTokenE V
)V W
;W X
Task 
< 	
Result	 
> 
Remove 
( 
RemoveCityCommand )
request* 1
,1 2
CancellationToken3 D
cancellationTokenE V
)V W
;W X
Task 
< 	
Result	 
< 
CityResponseDto 
?  
>  !
>! "
GetById# *
(* +
Guid+ /
id0 2
,2 3
CancellationToken4 E
cancellationTokenF W
)W X
;X Y
Task 
< 	
Result	 
< 
PagedResponseDto  
<  !
CityResponseDto! 0
?0 1
>1 2
>2 3
>3 4
Get5 8
(8 9
CityQueryParamsDto9 K
paramL Q
,Q R
CancellationTokenS d
cancellationTokene v
)v w
;w x
Task 
< 	
bool	 
> 
AddFromFile 
( 
CityFromFileDto *
item+ /
,/ 0
CancellationToken1 B
cancellationTokenC T
)T U
;U V
} µ
UC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Services\IImportServices.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Services 
; 
public 
	interface 
IImportServices  
{ 
Task 
ProccessFile	 
( 
Guid 
id 
, 
	IFormFile (
file) -
,- .
CancellationToken/ @
cancellationTokenA R
)R S
;S T
} Ä
TC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Services\IStateServices.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Services 
; 
public 
	interface 
IStateServices 
{		 
Task

 
<

 	
Result

	 
<

 
Guid

 
>

 
>

 
Create

 
(

 
CreateStateCommand

 0
request

1 8
,

8 9
CancellationToken

: K
cancellationToken

L ]
)

] ^
;

^ _
Task 
< 	
Result	 
> 
Update 
( 
UpdateStateCommand *
request+ 2
,2 3
CancellationToken4 E
cancellationTokenF W
)W X
;X Y
Task 
< 	
Result	 
> 
Remove 
( 
RemoveStateCommand *
request+ 2
,2 3
CancellationToken4 E
cancellationTokenF W
)W X
;X Y
Task 
< 	
Result	 
< 
StateResponseDto  
?  !
>! "
>" #
GetById$ +
(+ ,
Guid, 0
id1 3
,3 4
CancellationToken5 F
cancellationTokenG X
)X Y
;Y Z
Task 
< 	
Result	 
< 
PagedResponseDto  
<  !
StateResponseDto! 1
?1 2
>2 3
>3 4
>4 5
Get6 9
(9 :
StateQueryParamsDto: M
paramN S
,S T
CancellationTokenU f
cancellationTokeng x
)x y
;y z
Task 
< 	
Result	 
< 
Guid 
? 
> 
> 
GetIdByCode #
(# $
int$ '
code( ,
,, -
CancellationToken. ?
cancellationToken@ Q
)Q R
;R S
Task 
< 	
bool	 
> 
AddFromFile 
( 
StateFromFileDto +
item, 0
,0 1
CancellationToken2 C
cancellationTokenD U
)U V
;V W
} ¢
SC:\Users\patrick.amorim\source\repos\ibge-api\Ibge.Domain\Services\IUserServices.cs
	namespace 	
Ibge
 
. 
Domain 
. 
Services 
; 
public 
	interface 
IUserServices 
{ 
Task		 
<		 	
Result			 
<		 
TokenResponse		 
>		 
>		 
Auth		  $
(		$ %
AuthUserCommand		% 4
request		5 <
,		< =
CancellationToken		> O
cancellationToken		P a
)		a b
;		b c
Task

 
<

 	
Result

	 
<

 
Guid

 
>

 
>

 
Create

 
(

 
CreateUserCommand

 /
request

0 7
,

7 8
CancellationToken

9 J
cancellationToken

K \
)

\ ]
;

] ^
} 